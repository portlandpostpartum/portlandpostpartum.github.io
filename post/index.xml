<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on John Andersen (pdxjohnny)</title><link>https://pdxjohnny.github.io/post/</link><description>Recent content in Posts on John Andersen (pdxjohnny)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://pdxjohnny.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Personal Development Environment</title><link>https://pdxjohnny.github.io/post/dev-environment/</link><pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate><guid>https://pdxjohnny.github.io/post/dev-environment/</guid><description>Tools Here&amp;rsquo;s a list of things I need to to and the tools I use to do it
Development Environment Editor vim Learn VIM Terminal Multiplexer Let&amp;rsquo;s you turn a single shell session into a bunch of shells, you can put them side by side, have tabs, label them, etc. tmux Cheatsheet Testing nodemon This will change your life. Its a command line utility that will re-run a command when files with certain extentions change.</description></item><item><title>Clear Containers on Arch Linux</title><link>https://pdxjohnny.github.io/post/clear-containers-on-arch-linux/</link><pubDate>Tue, 17 Jan 2017 21:06:04 -0800</pubDate><guid>https://pdxjohnny.github.io/post/clear-containers-on-arch-linux/</guid><description>So you want the security of a virtual machine but the ease of use of docker and containers? Well Clear Containers is the solution for you my friend. Here I am going to show you how to install and configure the Clear Containers runtime on your Arch Linux host.
I have created to packages in AUR to assit you in building the packages you need.
qemu-lite package qemu-lite provides virtualisation for Clear Containers.</description></item><item><title>3 Resistor Bias Circuit with NMOS Transistor</title><link>https://pdxjohnny.github.io/post/3-resistor-bias-nmos/</link><pubDate>Fri, 11 Nov 2016 12:22:04 -0800</pubDate><guid>https://pdxjohnny.github.io/post/3-resistor-bias-nmos/</guid><description>Circuit Steps Pick a Vdd
9 Volts Pick a transistor and Vtn for it
2N7002 Vtn = 1.6 Pick and Id
2 mA Find RL for Vdd and Id
RL = Vdd / Id RL = 9 Volts / 2 mA RL = 4.5 k Ohms Pick a much smaller current for R1 and R2, Ir (bias resistor current)
Ir = 200 uA Find R1 and R2 such that the voltage drop across R2 is the same as Vtn.</description></item><item><title>ARM workflow with qemu and arm-none-eabi</title><link>https://pdxjohnny.github.io/post/arm-qemu/</link><pubDate>Wed, 09 Nov 2016 14:57:07 -0800</pubDate><guid>https://pdxjohnny.github.io/post/arm-qemu/</guid><description>This should get you up and running writing ARM assembly without hardware.
Clone this the repo for this turtorial.
git clone https://gist.github.com/pdxjohnny/3de9a9bdd38cacf3ea394207762f1002 arm-qemu Dependencies The first step is to install the necessary packages. These are the arm-none-eabi tool chain and qemu with arm support.
Arch Linux sudo pacman -S arm-none-eabi-gcc arm-none-eabi-binutils arm-none-eabi-gdb \ arm-none-eabi-newlib qemu qemu-arch-extra Ubuntu sudo apt -y install make qemu-system-arm \ gcc-arm-none-eabi binutils-arm-none-eabi gdb-arm-none-eabi \ libstdc++-arm-none-eabi-newlib libnewlib-arm-none-eabi GDB In .</description></item><item><title>Trinity fuzzer on Android (on Intel)</title><link>https://pdxjohnny.github.io/post/trinity-fuzzer-android/</link><pubDate>Mon, 17 Oct 2016 12:51:22 -0700</pubDate><guid>https://pdxjohnny.github.io/post/trinity-fuzzer-android/</guid><description>Step 1 - Clone trinity Grab the source for trinity. We need to make some minor modifications.
At the time of writing this the latest commit on master was 3a0e33d1db3214503316840ecfb90075d60ab3be adapt instructions as necessary. The basic idea of static linking and disabling of feature&amp;rsquo;s you don&amp;rsquo;t need is still the same.
git clone https://github.com/kernelslacker/trinity cd trinity ./configure Step 2 - 32 bit and static compilation Edit the make file and add -m32 to any line containing CFLAGS and add -static to any line containing LDFLAGS.</description></item><item><title>Fuzzing network applications with peach</title><link>https://pdxjohnny.github.io/post/peach-network/</link><pubDate>Wed, 10 Aug 2016 13:35:13 -0700</pubDate><guid>https://pdxjohnny.github.io/post/peach-network/</guid><description>So you want to fuzz network applications with peach eh? Well you&amp;rsquo;ve come to the right place. This is a tutorial on how to get you fuzzing TCP applications, without TLS/SSL enabled. If you want to fuzz UDP or an application which only communicates via TLS/SSL then this is a great place for you to start, however it will not answer all your questions. I will point you in the right direction at the end of this post.</description></item></channel></rss>